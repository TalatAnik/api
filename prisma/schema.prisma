// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  studentID String   @unique
  email     String   @unique
  phone     String
  password  String
  createdAt DateTime @default(now())
  Orders    Order[]
  Reviews   Review[]
}

model Restaurant {
  id          String   @id @default(uuid())
  bannerImg   String    @default("bannerSample.jpg")
  name        String   @unique
  description String
  createdAt   DateTime @default(now())
  password    String
  Items       Item[]
}

model Admin {
  id        String   @id @default(uuid())
  name      String   @unique
  password  String
  role      String
  status    Boolean
  createdAt DateTime @default(now())
}

model Item {
  id           String     @id @default(uuid())
  name         String
  description  String
  price        Float
  owner        Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId String
  offerPrice   Float
  onOffer      Boolean
  rating       Int
  Order        Order?     @relation(fields: [orderId], references: [id])
  orderId      String?
  Review       Review[]
}

model Order {
  id          String   @id @default(uuid())
  items       Item[]
  discount    Float
  customer    User     @relation(fields: [userId], references: [id])
  userId      String
  location    String
  createdAt   DateTime
  acceptedAt  DateTime
  queuedAt    DateTime
  pickupAt    DateTime
  deliveredAt DateTime
  status      String
  total       Float
}

model Review {
  id     String @id @default(uuid())
  body   String
  rating Int
  user   User   @relation(fields: [userId], references: [id])
  userId String
  item   Item   @relation(fields: [itemId], references: [id])
  itemId String
}
